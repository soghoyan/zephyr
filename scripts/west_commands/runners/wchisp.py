# Copyright (c) 2023-2024 Chen Xingyu <hi@xingrz.me>
# SPDX-License-Identifier: Apache-2.0

'''Runner for flashing WCH devices with WCHISPTool_CMD.'''

from runners.core import ZephyrBinaryRunner, RunnerCaps

class WchIspBinaryRunner(ZephyrBinaryRunner):
    '''Runner front-end for WCHISPTool_CMD'''

    def __init__(self, cfg, device, cfg_file):
        super().__init__(cfg)
        self.app_bin = cfg.bin_file
        self.device = device
        self.cfg_file = cfg_file

    @classmethod
    def name(cls):
        return 'wchisp'

    @classmethod
    def capabilities(cls):
        return RunnerCaps(commands={'flash'})

    @classmethod
    def do_add_parser(cls, parser):
        parser.add_argument('--device', required=True,
                            help='port of the USB ISP device')
        parser.add_argument('--cfg-file', required=True,
                            help='configuration file generated by WCHISPTool')

    @classmethod
    def do_create(cls, cfg, args):
        return WchIspBinaryRunner(cfg, args.device, args.cfg_file)

    def do_run(self, command, **kwargs):
        self.check_call([
            'WCHISPTool_CMD',
            '--device', self.device,
            '--configure', self.cfg_file,
            '--operation', 'program',
            '--flash', self.app_bin,
        ])
